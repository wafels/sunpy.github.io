<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Blog - Posts tagged Code</title>
  <id>https://sunpy.org/blog.html/blog/tag/code/atom.xml</id>
  <updated>2017-08-29T00:00:00Z</updated>
  <link href="https://sunpy.org/blog.html" />
  <link href="https://sunpy.org/blog.html/blog/tag/code/atom.xml" rel="self" />
  <generator uri="http://ablog.readthedocs.org" version="0.8.4">ABlog</generator>
  <entry xml:base="https://sunpy.org/blog.html/blog/tag/code/atom.xml">
    <title type="text">IRISPy and NDCube</title>
    <id>https://sunpy.org/blog.html/posts/2017/2017-08-29-IRISPy-andNDCube.html</id>
    <updated>2017-08-29T00:00:00Z</updated>
    <published>2017-08-29T00:00:00Z</published>
    <link href="https://sunpy.org/blog.html/posts/2017/2017-08-29-IRISPy-andNDCube.html" />
    <author>
      <name>Ankit Baruah</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;irispy-and-ndcube&quot;&gt;

&lt;p&gt;GSoC has come to an end, it was one of the best summer experience I had.  In
this summer I had to create a new affiliated package IRISPy but during this
project making a base package for multi-dimensional contiguious and
non-contiguious spatially aware arrays (from readme.md of NDCube) was a natural
step so ended up developing another repository NDCube.  This was initially
a part of sunpycube but after breaking and burning everything we ended up with
ndcube :P.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;ndcube&quot;&gt;
&lt;h2&gt;NDCube&lt;/h2&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/sunpy/ndcube&quot;&gt;NDCube&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/abit2/cube/pull/10&quot;&gt;PR10&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The NDCube has two container objects:&lt;/p&gt;
&lt;p&gt;1. NDCube which can handle n-dimensional data containing WCS objects and metadata.
This has different methods such as:&lt;/p&gt;
&lt;p&gt;The basic slicing i.e &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;__getitem__&lt;/span&gt;&lt;/code&gt; of N-dimensional objects like numpy.array
and this also handle the slicing of WCS objects.  Suppose we are dropping
a axis, this is handled by setting the WCS value to one for that axis.&lt;/p&gt;
&lt;div class=&quot;highlight-default&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cube2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dimensions&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DimensionPair&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Quantity&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axis_types&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;HPLN-TAN&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;HPLT-TAN&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;WAVE&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cube2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Sunpy&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NDCube&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;---------------------&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;WCS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Keywords&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Number&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WCS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CTYPE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;WAVE&amp;#39;&lt;/span&gt;  &lt;span class=&quot;s1&quot;&gt;&amp;#39;HPLT-TAN&amp;#39;&lt;/span&gt;  &lt;span class=&quot;s1&quot;&gt;&amp;#39;HPLN-TAN&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CRVAL&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0000000000000001e-09&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CRPIX&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;PC1_1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PC1_2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PC1_3&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;PC2_1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PC2_2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PC2_3&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;PC3_1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PC3_2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PC3_3&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CDELT&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0000000000000002e-11&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.40000000000000002&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NAXIS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;---------------------&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NDCube&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;3.&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;4.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pix&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Axis&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Types&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NDCube&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;HPLN-TAN&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;HPLT-TAN&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;WAVE&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cube2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Sunpy&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NDCube&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;---------------------&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;WCS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Keywords&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Number&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WCS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CTYPE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;WAVE&amp;#39;&lt;/span&gt;  &lt;span class=&quot;s1&quot;&gt;&amp;#39;HPLT-TAN&amp;#39;&lt;/span&gt;  &lt;span class=&quot;s1&quot;&gt;&amp;#39;HPLN-TAN&amp;#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CRVAL&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0000000000000001e-09&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CRPIX&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;2.0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;PC1_1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PC1_2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PC1_3&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;PC2_1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PC2_2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PC2_3&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;PC3_1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PC3_2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PC3_3&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.0&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CDELT&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.0000000000000002e-11&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;0.40000000000000002&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NAXIS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;---------------------&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Length&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NDCube&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.&lt;/span&gt;  &lt;span class=&quot;mf&quot;&gt;4.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pix&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Axis&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Types&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NDCube&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;HPLT-TAN&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;WAVE&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cube2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dimensions&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DimensionPair&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Quantity&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;3.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;4.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axis_types&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;HPLT-TAN&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;WAVE&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;plot()&lt;/span&gt;&lt;/code&gt; method that animates if dimension is greater than 2, else if dimension less than equal to 2 than plots images, this animations uses the WCS data for the axis.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;world_to_pixel()&lt;/span&gt;&lt;/code&gt; method converts world coordinates to pixel coordinates, this method is unit aware.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;pixel_to_world()&lt;/span&gt;&lt;/code&gt; method converts pixel coordinates to world coordinates, this method is unit aware.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;to_sunpy()&lt;/span&gt;&lt;/code&gt; this method automates the conversion of present NDCube instance to sunpy instance is it satisfies all the necessary requirements. Presently it supports Map and work is going on in TimeSeries.&lt;/p&gt;
&lt;p&gt;2. &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;NDCubeSequence&lt;/span&gt;&lt;/code&gt; which handles a list of NDCube object, this also handles extra coordinate axis which is parallel to one of the data axis.
This has methods such as:&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;plot()&lt;/span&gt;&lt;/code&gt; method that creates a animation using the data of the WCS for the axis.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;__getitem__&lt;/span&gt;&lt;/code&gt; method that slices the sequence like a list containing NDCubes which also handles slicing of WCS objects.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;index_as_cube()&lt;/span&gt;&lt;/code&gt; this method handles the slicing of sequence as a single N-dimensional object.
Example: if the dimension of NDCube objects inside the list of NDCubeSequence is 3 then this method will treat slicing of sequence as single 3 dimensional object by concatenating all the cubes.
So this makes the dimensions as &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;(len(list_inside_cubesequence)*NDCube[1st&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;dimension],&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;NDCube[2nd&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;dimension],&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;NDCube[3rd&lt;/span&gt; &lt;span class=&quot;pre&quot;&gt;dimension])&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;explode_along_axis()&lt;/span&gt;&lt;/code&gt; method that slices NDCube object along that axis.
This is useful to reduce the dimension of NDCube’s inside the sequence list.
This will create a new sequence as this break the cube along one axis.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;to_sunpy()&lt;/span&gt;&lt;/code&gt; method it creates a new Sunpy instance if it satisfies the requirements.
Presently only mapcube is implemented.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;irispy&quot;&gt;
&lt;h2&gt;IRISPy&lt;/h2&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/abit2/irispy/pull/3&quot;&gt;PR3&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;IRISPy class was a easy implementation after the useful and challenging NDCube repository was alive.
This made creating a new class such as IRISSpectrograph a rather simple task.
This was done in a clean and neat way.&lt;/p&gt;
&lt;p&gt;So this class object has all the inherent methods and properties of NDCubeSequence as it uses this as it’s base class.&lt;/p&gt;
&lt;p&gt;Future work includes making changes to &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;IRISSpectrograph&lt;/span&gt;&lt;/code&gt; to include the recently added changes such as
SpectrographSequence, so this is a new sequence which is using the &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;NDCubeSequence&lt;/span&gt;&lt;/code&gt; as it’s parent class. Making the
iris tools working properly with the new IRISSpectrograph. Developing NDCube’s and NDCubeSequence’s &lt;code class=&quot;docutils literal&quot;&gt;&lt;span class=&quot;pre&quot;&gt;to_sunpy&lt;/span&gt;&lt;/code&gt; method
to handle all the sunpy objects.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry xml:base="https://sunpy.org/blog.html/blog/tag/code/atom.xml">
    <title type="text">Sunpy Website Improvements</title>
    <id>https://sunpy.org/blog.html/posts/2017/2017-08-16-sunpy-website-improvements.html</id>
    <updated>2017-08-16T00:00:00Z</updated>
    <published>2017-08-16T00:00:00Z</published>
    <link href="https://sunpy.org/blog.html/posts/2017/2017-08-16-sunpy-website-improvements.html" />
    <author>
      <name>Duygu KESKEK</name>
    </author>
    <content type="html">&lt;div class=&quot;section&quot; id=&quot;sunpy-website-improvements&quot;&gt;

&lt;p&gt;Believe or not, there is only one week left to the end of GSoC!
The whole GSoC period became an unforgettable experience for me.
I still remember the first time I read the documentation of Sphinx and say “What the hell am I supposed to do now?”&lt;/p&gt;
&lt;p&gt;The old SunPy website was a Ruby based Jekyll static website and it wasn’t consistent with the documentation theme.
The main aspect of the project is to remove the inconsistency between the website and the docs while improving UI/UX.
There are also 4 extensions of the project&lt;/p&gt;
&lt;ol class=&quot;arabic simple&quot;&gt;
&lt;li&gt;Implementing a registry of SunPy Affiliated packages&lt;/li&gt;
&lt;li&gt;Move away from Jekyll to a Python based static site generator&lt;/li&gt;
&lt;li&gt;Write a sphinx extension that maintains an up to date list on the main website of the instruments and data products supported by the SunPy library&lt;/li&gt;
&lt;li&gt;Improve the content of the SunPy website&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In my proposal, I mentioned that I’ll implement all the extensions and at the end of the GSoC, I can say that I’m done with all except the Sphinx extension.
Mentors also didn’t force me to do that since there was more important and never-ending issues on the list.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;first-month&quot;&gt;
&lt;h2&gt;First Month&lt;/h2&gt;
&lt;p&gt;At the first month of the project, I spent almost 1 week to understand Sphinx and read its documentation.
This was the first time I heard about Sphinx and it was quite exciting to learn something new.
The challenge of my project was to create both the website and the docs using Sphinx.
This was discussed on Matrix channel, and even seemed impossible for some since there is always a risk that the website and the docs may break each other.
Also, using Sphinx for a website theme was so RARE ! I was sometimes like “Come on! It’s a docs generator ?!”&lt;/p&gt;
&lt;p&gt;I used &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/ryan-roemer/sphinx-bootstrap-theme&quot;&gt;sphinx-bootstrap-theme&lt;/a&gt; as a basis of my project.
I started implementing the navbar sections and put all the content in the new website.
Sphinx uses restructuredText as its markup language and I used RST for the entire website.
I added a scrolling sidebar for navigation between headlines.
At the end of the first month, the structure of the website was nicely prepared for revisions and improvements.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;second-month&quot;&gt;
&lt;h2&gt;Second Month&lt;/h2&gt;
&lt;p&gt;The second month, I started to work on the blog section and used &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/abakan/ablog&quot;&gt;Ablog&lt;/a&gt; .
However, the struggle was real, Ablog was full of bugs and it was the only option for blogging with Sphinx.
Then, my mentors fixed the Ablog and did the magic.
After that, I implemented the blogging system and made it possible for someone to write their own blog posts easily.
Additionally, I integrated &lt;a class=&quot;reference external&quot; href=&quot;https://disqus.com/&quot;&gt;DISQUS&lt;/a&gt; to the blog and enabled commenting on the posts.
At the end of the 2nd month, I made a lot of meetings with my mentors and started to work on the documentation theme.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;final-month&quot;&gt;
&lt;h2&gt;Final Month&lt;/h2&gt;
&lt;p&gt;The final month of GSoC was the most painful one for me :P
At the beginning, mentors helped me to build the current SunPy documentation theme (It took 3 days to achieve that ^^) and use our new &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/sunpy/sunpy-sphinx-theme&quot;&gt;SunPy Sphinx theme&lt;/a&gt; for the docs.
After that, they opened issues on the theme repo (Have a look at this never-ending &lt;a class=&quot;reference external&quot; href=&quot;https://github.com/sunpy/sunpy-sphinx-theme/issues&quot;&gt;issue list&lt;/a&gt; 😅) and I fixed them one by one.
The worst part of working on the docs is the build time!
It takes averagely 10 min to build after a simple change 😠
By time, I got used to this also ^^ I redesigned every component of the docs and made them consistent.
There was a huge color mismatch and also lots of bugs, and I’m done with all and my mentors appreciate the work.
I’m also really happy with the docs theme. Now, there are just some minor issues and the renovated website will be replaced with the good old Jekyll one before the SunPy 0.8 release ^^
I’m really exciting for the day that everyone will see the new website with the release and get some feedbacks on it :)
In the near end of the GSoC, I can comfortably say that it makes me feel really happy to work on an open source project.
I want to contribute to the website after the GSoC ends and see how it will improve even better by time.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content>
  </entry>
</feed>
